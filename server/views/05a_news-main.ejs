<%# <html> %>
<%- include('00a_header.ejs') %>

    <link rel = "stylesheet" href = "/css/05_news.css">

    <div id = "news-minisite-info" class = "minisite-info">
      <div class = "container">
        <div class = "row">
          <div class = "minisite-info-text col-md-7 col-lg-8">
            <h1>News</h1>
            <p>This minisite displays news articles in a predefined layout using a templating language (EJS, Embedded JavaScirpt). The articles are stored in MongoDB in JSON format.</p>
            <p>The German language was chosen as an alternative for Lorem Ipsum - to fill the site with content without drawing too much attention on the content itself.</p>
            <div class = "d-flex">
              <button class = "btn btn-minisite-info">Details</button>
            </div>
          </div>
        </div>
      </div>
      <div class = "minisite-info-image d-none d-md-block">
      </div>
    </div>
    
    <div class = "code-details">
      <div class = "container">
        <div class = "row">
          <div class = "col">
            <h2>Code highlights</h2>
            <p>The structure of each article can be represented as the following format. When an article is requested, it can be identified by its ID in the metadata, which is the same as the URL slug. The contents of the article are represented as an array, which will be displayed in the same order as stored in the database.</p>

            <label class = "code-label">JSON - Article structure</label>
            <label class = "code-label-path">MongoDB, news-articles collection</label>
            <pre class = "code-box"><code class="language-js">{
  "metadata": {
    "id": "...",
    "title": "...",
    "date": "...",
    ...
  },
  "article": [
    {
      "element": "heading",
      "content": "..."
    },
    {
      "element": "paragraph",
      "content": "..."
    },
    {
      "element": "image",
      "content": "/images/news/..."
    },
    ...
  }
}</code></pre>

          <p>The templating engine complements each element of the array with the corresponding HTML tags based on the type of of the element and renders the article for display. EJS uses <code>&lt;%</code> and <code>%&gt;</code> symbols for identifying JavaScript inside the HTML structure.</p>

          <label class = "code-label">Node.js / EJS - Templating engine</label>
          <label class = "code-label-path">/server/views/05b_news-article-display.ejs</label>
          <pre class = "code-box"><code class="language-ejs">&lt;% article.forEach((item, index) =&gt; { -%&gt;
  &lt;% if (item.element === "heading") { %&gt;
    &lt;h2&gt;&lt;%= item.content %&gt;&lt;/h2&gt;
  &lt;%}-%&gt;
  &lt;% if (item.element === "paragraph") { %&gt;
    &lt;p&gt;&lt;%=item.content%&gt;&lt;/p&gt;
  &lt;%}-%&gt;
  &lt;% if (item.element === "image") { %&gt;
    &lt;img class = "img-fluid" src = "&lt;%= item.content %&gt;"&gt;
  &lt;%}-%&gt;
  ...
&lt;% }); -%&gt;</code></pre>
          
            <h3>Potential improvements</h3>
            <p>This mini-site can be further improved by the following:</p>
            <ul>
              <li>Search bar using Elastisearch</li>
              <li>Different layout for important and less important articles</li>
              <li>Categories (such as politics, economy, tech etc.)</li>
              <li>Comment section</li>
              <li>Recommendations for related articles at the bottom</li>
            </ul>

            <div class = "d-flex">
              <button class = "btn btn-minisite-info">Hide</button>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <section class = "news-minisite minisite-content">   
      <div id = "news-article-list" class = "container">
        <div class = "row">
    <% newsList.forEach((newsItem, index) => { %>
          <div class = "article-summary col-lg-4 col-sm-6">
            <a href = "/news/article/<%= newsItem.metadata.id %>/"><img class = "img-fluid img-border" src = "<%= newsItem.metadata.thumbnail %>"></a>
            <a href = "/news/article/<%= newsItem.metadata.id %>/"><h3><%= newsItem.metadata.title %></h3></a>
            <p><%= newsItem.metadata.summary %></p>
          </div>          
    <% }) %>
        </div>
      </div>
    </section>

<%- include('00b_footer.ejs') %>
<%# </html> %>